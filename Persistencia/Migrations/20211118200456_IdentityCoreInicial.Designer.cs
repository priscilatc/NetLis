// <auto-generated />
using System;
using Dominio.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Persistencia.Migrations
{
    [DbContext(typeof(netLisContext))]
    [Migration("20211118200456_IdentityCoreInicial")]
    partial class IdentityCoreInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Model.TblAreaServLabEmpleado", b =>
                {
                    b.Property<Guid>("IdAreaServLabEmpleados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdAreaLabServicio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdAreaLabServicioNavigationIdAreaLabServicio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEmpleado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdEmpleadoNavigationIdEmpleado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSucursal")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSucursalNavigationIdSucursal")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdAreaServLabEmpleados");

                    b.HasIndex("IdAreaLabServicioNavigationIdAreaLabServicio");

                    b.HasIndex("IdEmpleadoNavigationIdEmpleado");

                    b.HasIndex("IdSucursalNavigationIdSucursal");

                    b.ToTable("TblAreaServLabEmpleados");
                });

            modelBuilder.Entity("Dominio.Model.TblCatAreasLabServicio", b =>
                {
                    b.Property<Guid>("IdAreaLabServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Estado")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdAreaLabServicio");

                    b.ToTable("TblCatAreasLabServicios");
                });

            modelBuilder.Entity("Dominio.Model.TblCatAreasServ", b =>
                {
                    b.Property<Guid>("IdAreaServ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionCorta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("IdAreaServ");

                    b.ToTable("TblCatAreasServs");
                });

            modelBuilder.Entity("Dominio.Model.TblCatCategoriaExamenes", b =>
                {
                    b.Property<Guid>("IdCategoriaExamenes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("IdCategoriaExamenes");

                    b.ToTable("TblCatCategoriaExamenes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatDepartamento", b =>
                {
                    b.Property<Guid>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<Guid>("IdPais")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdDepartamento");

                    b.ToTable("TblCatDepartamentos");
                });

            modelBuilder.Entity("Dominio.Model.TblCatEstadoCivil", b =>
                {
                    b.Property<Guid>("IdEstadoCivil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("IdEstadoCivil");

                    b.ToTable("TblCatEstadoCivils");
                });

            modelBuilder.Entity("Dominio.Model.TblCatHospital", b =>
                {
                    b.Property<Guid>("IdHospital")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("IdHospital");

                    b.ToTable("TblCatHospitals");
                });

            modelBuilder.Entity("Dominio.Model.TblCatIdentificacion", b =>
                {
                    b.Property<Guid>("IdIdentificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<Guid>("IdNacionalidad")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNacionalidadNavigationIdNacionalidad")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdIdentificacion");

                    b.HasIndex("IdNacionalidadNavigationIdNacionalidad");

                    b.ToTable("TblCatIdentificacions");
                });

            modelBuilder.Entity("Dominio.Model.TblCatIndicacionExaPaciente", b =>
                {
                    b.Property<Guid>("IdIndicacionExaPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdExamenNavigationIdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Indicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdIndicacionExaPaciente");

                    b.HasIndex("IdExamenNavigationIdExamen");

                    b.ToTable("TblCatIndicacionExaPacientes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatMetodologia", b =>
                {
                    b.Property<Guid>("IdMetodologia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("IdMetodologia");

                    b.ToTable("TblCatMetodologia");
                });

            modelBuilder.Entity("Dominio.Model.TblCatNacionalidad", b =>
                {
                    b.Property<Guid>("IdNacionalidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNacionalidad");

                    b.ToTable("TblCatNacionalidads");
                });

            modelBuilder.Entity("Dominio.Model.TblCatOcupaciones", b =>
                {
                    b.Property<Guid>("IdOcupaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdEmpleado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdEmpleadoNavigationIdEmpleado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProfesiones")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdProfesionesNavigationIdProfesiones")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdOcupaciones");

                    b.HasIndex("IdEmpleadoNavigationIdEmpleado");

                    b.HasIndex("IdProfesionesNavigationIdProfesiones");

                    b.ToTable("TblCatOcupaciones");
                });

            modelBuilder.Entity("Dominio.Model.TblCatPais", b =>
                {
                    b.Property<Guid>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("IdPais");

                    b.ToTable("TblCatPais");
                });

            modelBuilder.Entity("Dominio.Model.TblCatPerfiles", b =>
                {
                    b.Property<Guid>("IdPerfiles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("IdPerfiles");

                    b.ToTable("TblCatPerfiles");
                });

            modelBuilder.Entity("Dominio.Model.TblCatPerfilesExamenes", b =>
                {
                    b.Property<Guid>("IdPerfilesExamenes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdExamenNavigationIdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPerfiles")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPerfilesNavigationIdPerfiles")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPerfilesExamenes");

                    b.HasIndex("IdExamenNavigationIdExamen");

                    b.HasIndex("IdPerfilesNavigationIdPerfiles");

                    b.ToTable("TblCatPerfilesExamenes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatProfesiones", b =>
                {
                    b.Property<Guid>("IdProfesiones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("IdProfesiones");

                    b.ToTable("TblCatProfesiones");
                });

            modelBuilder.Entity("Dominio.Model.TblCatSexo", b =>
                {
                    b.Property<Guid>("IdSexo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSexo");

                    b.ToTable("TblCatSexos");
                });

            modelBuilder.Entity("Dominio.Model.TblCatSucursales", b =>
                {
                    b.Property<Guid>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<Guid>("IdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDepartamentoNavigationIdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdHospital")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdHospitalNavigationIdHospital")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPais")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPaisNavigationIdPais")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlLogo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSucursal");

                    b.HasIndex("IdDepartamentoNavigationIdDepartamento");

                    b.HasIndex("IdHospitalNavigationIdHospital");

                    b.HasIndex("IdPaisNavigationIdPais");

                    b.ToTable("TblCatSucursales");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoMuestra", b =>
                {
                    b.Property<Guid>("IdTipoMuestra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("IdTipoMuestra");

                    b.ToTable("TblCatTipoMuestras");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoOrden", b =>
                {
                    b.Property<Guid>("IdTipoOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoOrden");

                    b.ToTable("TblCatTipoOrdens");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoResultado", b =>
                {
                    b.Property<Guid>("IdTipoResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoResultado");

                    b.ToTable("TblCatTipoResultados");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoSangre", b =>
                {
                    b.Property<Guid>("IdTipoSangre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoSangre");

                    b.ToTable("TblCatTipoSangre");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoServicio", b =>
                {
                    b.Property<Guid>("IdTipoServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoServicio");

                    b.ToTable("TblCatTipoServicios");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoUsuario", b =>
                {
                    b.Property<Guid>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoUsuario");

                    b.ToTable("TblCatTipoUsuarios");
                });

            modelBuilder.Entity("Dominio.Model.TblCatUnidadMedida", b =>
                {
                    b.Property<Guid>("IdUnidadMedidas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("UnidadMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUnidadMedidas");

                    b.ToTable("TblCatUnidadMedidas");
                });

            modelBuilder.Entity("Dominio.Model.TblCatValoresNormales", b =>
                {
                    b.Property<Guid>("IdValoresNormales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<Guid>("IdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdExamenNavigationIdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSexo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSexoNavigationIdSexo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("RangoAlto")
                        .HasColumnType("float");

                    b.Property<double>("RangoBajo")
                        .HasColumnType("float");

                    b.HasKey("IdValoresNormales");

                    b.HasIndex("IdExamenNavigationIdExamen");

                    b.HasIndex("IdSexoNavigationIdSexo");

                    b.ToTable("TblCatValoresNormales");
                });

            modelBuilder.Entity("Dominio.Model.TblEmpleado", b =>
                {
                    b.Property<Guid>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Activo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodMinsa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionDomiciliar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EdadIngreso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaContrato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdDepartamentoNac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDepartamentoNacNavigationIdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDepartamentoRes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDepartamentoResNavigationIdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEstadoCivil")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdEstadoCivilNavigationIdEstadoCivil")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdIdentificacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdIdentificacionNavigationIdIdentificacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNacionalidad")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNacionalidadNavigationIdNacionalidad")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaisNac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPaisNacNavigationIdPais")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaisRes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPaisResNavigationIdPais")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProfesiones")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdProfesionesNavigationIdProfesiones")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSexo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSexoNavigationIdSexo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumIdentificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoDomiciliar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoMovil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioElimina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("IdDepartamentoNacNavigationIdDepartamento");

                    b.HasIndex("IdDepartamentoResNavigationIdDepartamento");

                    b.HasIndex("IdEstadoCivilNavigationIdEstadoCivil");

                    b.HasIndex("IdIdentificacionNavigationIdIdentificacion");

                    b.HasIndex("IdNacionalidadNavigationIdNacionalidad");

                    b.HasIndex("IdPaisNacNavigationIdPais");

                    b.HasIndex("IdPaisResNavigationIdPais");

                    b.HasIndex("IdProfesionesNavigationIdProfesiones");

                    b.HasIndex("IdSexoNavigationIdSexo");

                    b.ToTable("TblEmpleados");
                });

            modelBuilder.Entity("Dominio.Model.TblExamenes", b =>
                {
                    b.Property<Guid>("IdExamen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Confidencial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionCorta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<Guid>("IdAreaLabServicio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdAreaLabServicioNavigationIdAreaLabServicio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCategoriaExamenes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCategoriaExamenesNavigationIdCategoriaExamenes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoMuestra")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdTipoMuestraNavigationIdTipoMuestra")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoResultado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdTipoResultadoNavigationIdTipoResultado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUnidadMedidas")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUnidadMedidasNavigationIdUnidadMedidas")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdExamen");

                    b.HasIndex("IdAreaLabServicioNavigationIdAreaLabServicio");

                    b.HasIndex("IdCategoriaExamenesNavigationIdCategoriaExamenes");

                    b.HasIndex("IdTipoMuestraNavigationIdTipoMuestra");

                    b.HasIndex("IdTipoResultadoNavigationIdTipoResultado");

                    b.HasIndex("IdUnidadMedidasNavigationIdUnidadMedidas");

                    b.ToTable("TblExamenes");
                });

            modelBuilder.Entity("Dominio.Model.TblMedico", b =>
                {
                    b.Property<Guid>("IdTblMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodMinsa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdDepartamentoNac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDepartamentoNacNavigationIdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDepartamentoRes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDepartamentoResNavigationIdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEstadoCivil")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdEstadoCivilNavigationIdEstadoCivil")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdIdentificacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdIdentificacionNavigationIdIdentificacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaisNac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPaisNacNavigationIdPais")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaisRes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPaisResNavigationIdPais")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSexo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSexoNavigationIdSexo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdtblCatSucursales")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdtblCatSucursalesNavigationIdSucursal")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumIdentificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTblMedico");

                    b.HasIndex("IdDepartamentoNacNavigationIdDepartamento");

                    b.HasIndex("IdDepartamentoResNavigationIdDepartamento");

                    b.HasIndex("IdEstadoCivilNavigationIdEstadoCivil");

                    b.HasIndex("IdIdentificacionNavigationIdIdentificacion");

                    b.HasIndex("IdPaisNacNavigationIdPais");

                    b.HasIndex("IdPaisResNavigationIdPais");

                    b.HasIndex("IdSexoNavigationIdSexo");

                    b.HasIndex("IdtblCatSucursalesNavigationIdSucursal");

                    b.ToTable("TblMedicos");
                });

            modelBuilder.Entity("Dominio.Model.TblOrdenes", b =>
                {
                    b.Property<Guid>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Activo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Asistencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaImprime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaOrden")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPreporte")
                        .HasColumnType("datetime2");

                    b.Property<string>("Finalizado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPacienteNavigationIdPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoOrden")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdTipoOrdenNavigationIdTipoOrden")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoServicio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdTipoServicioNavigationIdTipoServicio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdtblMedico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdtblMedicoNavigationIdTblMedico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NOrden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioImprime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOrden");

                    b.HasIndex("IdPacienteNavigationIdPaciente");

                    b.HasIndex("IdTipoOrdenNavigationIdTipoOrden");

                    b.HasIndex("IdTipoServicioNavigationIdTipoServicio");

                    b.HasIndex("IdtblMedicoNavigationIdTblMedico");

                    b.ToTable("TblOrdenes");
                });

            modelBuilder.Entity("Dominio.Model.TblOrdenesDetalle", b =>
                {
                    b.Property<Guid>("IdOrdenDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Activo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdExamenNavigationIdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOrden")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdOrdenNavigationIdOrden")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NOrden")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOrdenDetalle");

                    b.HasIndex("IdExamenNavigationIdExamen");

                    b.HasIndex("IdOrdenNavigationIdOrden");

                    b.ToTable("TblOrdenesDetalles");
                });

            modelBuilder.Entity("Dominio.Model.TblPaciente", b =>
                {
                    b.Property<Guid>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Activo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionDomiciliar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emabrazada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Fallecido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdDepartamentoNac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDepartamentoNacNavigationIdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDepartamentoRes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDepartamentoResNavigationIdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEstadoCivil")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdEstadoCivilNavigationIdEstadoCivil")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdIdentificacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdIdentificacionNavigationIdIdentificacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaisNac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPaisNacNavigationIdPais")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaisRes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPaisResNavigationIdPais")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProfesiones")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdProfesionesNavigationIdProfesiones")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSexo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSexoNavigationIdSexo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoSangre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdTipoSangreNavigationIdTipoSangre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumIdentificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Religion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoDomiciliar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoMovil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("tblCatReligionIdReigion")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPaciente");

                    b.HasIndex("IdDepartamentoNacNavigationIdDepartamento");

                    b.HasIndex("IdDepartamentoResNavigationIdDepartamento");

                    b.HasIndex("IdEstadoCivilNavigationIdEstadoCivil");

                    b.HasIndex("IdIdentificacionNavigationIdIdentificacion");

                    b.HasIndex("IdPaisNacNavigationIdPais");

                    b.HasIndex("IdPaisResNavigationIdPais");

                    b.HasIndex("IdProfesionesNavigationIdProfesiones");

                    b.HasIndex("IdSexoNavigationIdSexo");

                    b.HasIndex("IdTipoSangreNavigationIdTipoSangre");

                    b.HasIndex("tblCatReligionIdReigion");

                    b.ToTable("TblPacientes");
                });

            modelBuilder.Entity("Dominio.Model.TblResultado", b =>
                {
                    b.Property<Guid>("IdResultados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaImprime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaProcesa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaValida")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdExamenNavigationIdExamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOrden")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdOrdenNavigationIdOrden")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Impreso")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procesado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioImprime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioProcesa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioValida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Validado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdResultados");

                    b.HasIndex("IdExamenNavigationIdExamen");

                    b.HasIndex("IdOrdenNavigationIdOrden");

                    b.ToTable("TblResultados");
                });

            modelBuilder.Entity("Dominio.TblCatReligion", b =>
                {
                    b.Property<Guid>("IdReigion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdReigion");

                    b.ToTable("TblCatReligion");
                });

            modelBuilder.Entity("Dominio.TblUsuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IdEmpleado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Dominio.Model.TblAreaServLabEmpleado", b =>
                {
                    b.HasOne("Dominio.Model.TblCatAreasLabServicio", "IdAreaLabServicioNavigation")
                        .WithMany("TblAreaServLabEmpleados")
                        .HasForeignKey("IdAreaLabServicioNavigationIdAreaLabServicio");

                    b.HasOne("Dominio.Model.TblEmpleado", "IdEmpleadoNavigation")
                        .WithMany("TblAreaServLabEmpleados")
                        .HasForeignKey("IdEmpleadoNavigationIdEmpleado");

                    b.HasOne("Dominio.Model.TblCatSucursales", "IdSucursalNavigation")
                        .WithMany("TblAreaServLabEmpleados")
                        .HasForeignKey("IdSucursalNavigationIdSucursal");

                    b.Navigation("IdAreaLabServicioNavigation");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdSucursalNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblCatIdentificacion", b =>
                {
                    b.HasOne("Dominio.Model.TblCatNacionalidad", "IdNacionalidadNavigation")
                        .WithMany("TblCatIdentificacions")
                        .HasForeignKey("IdNacionalidadNavigationIdNacionalidad");

                    b.Navigation("IdNacionalidadNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblCatIndicacionExaPaciente", b =>
                {
                    b.HasOne("Dominio.Model.TblExamenes", "IdExamenNavigation")
                        .WithMany("TblCatIndicacionExaPacientes")
                        .HasForeignKey("IdExamenNavigationIdExamen");

                    b.Navigation("IdExamenNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblCatOcupaciones", b =>
                {
                    b.HasOne("Dominio.Model.TblEmpleado", "IdEmpleadoNavigation")
                        .WithMany("TblCatOcupaciones")
                        .HasForeignKey("IdEmpleadoNavigationIdEmpleado");

                    b.HasOne("Dominio.Model.TblCatProfesiones", "IdProfesionesNavigation")
                        .WithMany("TblCatOcupaciones")
                        .HasForeignKey("IdProfesionesNavigationIdProfesiones");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdProfesionesNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblCatPerfilesExamenes", b =>
                {
                    b.HasOne("Dominio.Model.TblExamenes", "IdExamenNavigation")
                        .WithMany("TblCatPerfilesExamenes")
                        .HasForeignKey("IdExamenNavigationIdExamen");

                    b.HasOne("Dominio.Model.TblCatPerfiles", "IdPerfilesNavigation")
                        .WithMany("TblCatPerfilesExamenes")
                        .HasForeignKey("IdPerfilesNavigationIdPerfiles");

                    b.Navigation("IdExamenNavigation");

                    b.Navigation("IdPerfilesNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblCatSucursales", b =>
                {
                    b.HasOne("Dominio.Model.TblCatDepartamento", "IdDepartamentoNavigation")
                        .WithMany("TblCatSucursales")
                        .HasForeignKey("IdDepartamentoNavigationIdDepartamento");

                    b.HasOne("Dominio.Model.TblCatHospital", "IdHospitalNavigation")
                        .WithMany("TblCatSucursales")
                        .HasForeignKey("IdHospitalNavigationIdHospital");

                    b.HasOne("Dominio.Model.TblCatPais", "IdPaisNavigation")
                        .WithMany("TblCatSucursales")
                        .HasForeignKey("IdPaisNavigationIdPais");

                    b.Navigation("IdDepartamentoNavigation");

                    b.Navigation("IdHospitalNavigation");

                    b.Navigation("IdPaisNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblCatValoresNormales", b =>
                {
                    b.HasOne("Dominio.Model.TblExamenes", "IdExamenNavigation")
                        .WithMany("TblCatValoresNormales")
                        .HasForeignKey("IdExamenNavigationIdExamen");

                    b.HasOne("Dominio.Model.TblCatSexo", "IdSexoNavigation")
                        .WithMany("TblCatValoresNormales")
                        .HasForeignKey("IdSexoNavigationIdSexo");

                    b.Navigation("IdExamenNavigation");

                    b.Navigation("IdSexoNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblEmpleado", b =>
                {
                    b.HasOne("Dominio.Model.TblCatDepartamento", "IdDepartamentoNacNavigation")
                        .WithMany()
                        .HasForeignKey("IdDepartamentoNacNavigationIdDepartamento");

                    b.HasOne("Dominio.Model.TblCatDepartamento", "IdDepartamentoResNavigation")
                        .WithMany()
                        .HasForeignKey("IdDepartamentoResNavigationIdDepartamento");

                    b.HasOne("Dominio.Model.TblCatEstadoCivil", "IdEstadoCivilNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IdEstadoCivilNavigationIdEstadoCivil");

                    b.HasOne("Dominio.Model.TblCatIdentificacion", "IdIdentificacionNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IdIdentificacionNavigationIdIdentificacion");

                    b.HasOne("Dominio.Model.TblCatNacionalidad", "IdNacionalidadNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IdNacionalidadNavigationIdNacionalidad");

                    b.HasOne("Dominio.Model.TblCatPais", "IdPaisNacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPaisNacNavigationIdPais");

                    b.HasOne("Dominio.Model.TblCatPais", "IdPaisResNavigation")
                        .WithMany()
                        .HasForeignKey("IdPaisResNavigationIdPais");

                    b.HasOne("Dominio.Model.TblCatProfesiones", "IdProfesionesNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IdProfesionesNavigationIdProfesiones");

                    b.HasOne("Dominio.Model.TblCatSexo", "IdSexoNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IdSexoNavigationIdSexo");

                    b.Navigation("IdDepartamentoNacNavigation");

                    b.Navigation("IdDepartamentoResNavigation");

                    b.Navigation("IdEstadoCivilNavigation");

                    b.Navigation("IdIdentificacionNavigation");

                    b.Navigation("IdNacionalidadNavigation");

                    b.Navigation("IdPaisNacNavigation");

                    b.Navigation("IdPaisResNavigation");

                    b.Navigation("IdProfesionesNavigation");

                    b.Navigation("IdSexoNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblExamenes", b =>
                {
                    b.HasOne("Dominio.Model.TblCatAreasLabServicio", "IdAreaLabServicioNavigation")
                        .WithMany("TblExamenes")
                        .HasForeignKey("IdAreaLabServicioNavigationIdAreaLabServicio");

                    b.HasOne("Dominio.Model.TblCatCategoriaExamenes", "IdCategoriaExamenesNavigation")
                        .WithMany("TblExamenes")
                        .HasForeignKey("IdCategoriaExamenesNavigationIdCategoriaExamenes");

                    b.HasOne("Dominio.Model.TblCatTipoMuestra", "IdTipoMuestraNavigation")
                        .WithMany("TblExamenes")
                        .HasForeignKey("IdTipoMuestraNavigationIdTipoMuestra");

                    b.HasOne("Dominio.Model.TblCatTipoResultado", "IdTipoResultadoNavigation")
                        .WithMany("TblExamenes")
                        .HasForeignKey("IdTipoResultadoNavigationIdTipoResultado");

                    b.HasOne("Dominio.Model.TblCatUnidadMedida", "IdUnidadMedidasNavigation")
                        .WithMany("TblExamenes")
                        .HasForeignKey("IdUnidadMedidasNavigationIdUnidadMedidas");

                    b.Navigation("IdAreaLabServicioNavigation");

                    b.Navigation("IdCategoriaExamenesNavigation");

                    b.Navigation("IdTipoMuestraNavigation");

                    b.Navigation("IdTipoResultadoNavigation");

                    b.Navigation("IdUnidadMedidasNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblMedico", b =>
                {
                    b.HasOne("Dominio.Model.TblCatDepartamento", "IdDepartamentoNacNavigation")
                        .WithMany()
                        .HasForeignKey("IdDepartamentoNacNavigationIdDepartamento");

                    b.HasOne("Dominio.Model.TblCatDepartamento", "IdDepartamentoResNavigation")
                        .WithMany()
                        .HasForeignKey("IdDepartamentoResNavigationIdDepartamento");

                    b.HasOne("Dominio.Model.TblCatEstadoCivil", "IdEstadoCivilNavigation")
                        .WithMany("TblMedicos")
                        .HasForeignKey("IdEstadoCivilNavigationIdEstadoCivil");

                    b.HasOne("Dominio.Model.TblCatIdentificacion", "IdIdentificacionNavigation")
                        .WithMany("TblMedicos")
                        .HasForeignKey("IdIdentificacionNavigationIdIdentificacion");

                    b.HasOne("Dominio.Model.TblCatPais", "IdPaisNacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPaisNacNavigationIdPais");

                    b.HasOne("Dominio.Model.TblCatPais", "IdPaisResNavigation")
                        .WithMany()
                        .HasForeignKey("IdPaisResNavigationIdPais");

                    b.HasOne("Dominio.Model.TblCatSexo", "IdSexoNavigation")
                        .WithMany("TblMedicos")
                        .HasForeignKey("IdSexoNavigationIdSexo");

                    b.HasOne("Dominio.Model.TblCatSucursales", "IdtblCatSucursalesNavigation")
                        .WithMany("TblMedicos")
                        .HasForeignKey("IdtblCatSucursalesNavigationIdSucursal");

                    b.Navigation("IdDepartamentoNacNavigation");

                    b.Navigation("IdDepartamentoResNavigation");

                    b.Navigation("IdEstadoCivilNavigation");

                    b.Navigation("IdIdentificacionNavigation");

                    b.Navigation("IdPaisNacNavigation");

                    b.Navigation("IdPaisResNavigation");

                    b.Navigation("IdSexoNavigation");

                    b.Navigation("IdtblCatSucursalesNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblOrdenes", b =>
                {
                    b.HasOne("Dominio.Model.TblPaciente", "IdPacienteNavigation")
                        .WithMany("TblOrdenes")
                        .HasForeignKey("IdPacienteNavigationIdPaciente");

                    b.HasOne("Dominio.Model.TblCatTipoOrden", "IdTipoOrdenNavigation")
                        .WithMany("TblOrdenes")
                        .HasForeignKey("IdTipoOrdenNavigationIdTipoOrden");

                    b.HasOne("Dominio.Model.TblCatTipoServicio", "IdTipoServicioNavigation")
                        .WithMany("TblOrdenes")
                        .HasForeignKey("IdTipoServicioNavigationIdTipoServicio");

                    b.HasOne("Dominio.Model.TblMedico", "IdtblMedicoNavigation")
                        .WithMany("TblOrdenes")
                        .HasForeignKey("IdtblMedicoNavigationIdTblMedico");

                    b.Navigation("IdPacienteNavigation");

                    b.Navigation("IdtblMedicoNavigation");

                    b.Navigation("IdTipoOrdenNavigation");

                    b.Navigation("IdTipoServicioNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblOrdenesDetalle", b =>
                {
                    b.HasOne("Dominio.Model.TblExamenes", "IdExamenNavigation")
                        .WithMany("TblOrdenesDetalles")
                        .HasForeignKey("IdExamenNavigationIdExamen");

                    b.HasOne("Dominio.Model.TblOrdenes", "IdOrdenNavigation")
                        .WithMany("TblOrdenesDetalles")
                        .HasForeignKey("IdOrdenNavigationIdOrden");

                    b.Navigation("IdExamenNavigation");

                    b.Navigation("IdOrdenNavigation");
                });

            modelBuilder.Entity("Dominio.Model.TblPaciente", b =>
                {
                    b.HasOne("Dominio.Model.TblCatDepartamento", "IdDepartamentoNacNavigation")
                        .WithMany()
                        .HasForeignKey("IdDepartamentoNacNavigationIdDepartamento");

                    b.HasOne("Dominio.Model.TblCatDepartamento", "IdDepartamentoResNavigation")
                        .WithMany()
                        .HasForeignKey("IdDepartamentoResNavigationIdDepartamento");

                    b.HasOne("Dominio.Model.TblCatEstadoCivil", "IdEstadoCivilNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IdEstadoCivilNavigationIdEstadoCivil");

                    b.HasOne("Dominio.Model.TblCatIdentificacion", "IdIdentificacionNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IdIdentificacionNavigationIdIdentificacion");

                    b.HasOne("Dominio.Model.TblCatPais", "IdPaisNacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPaisNacNavigationIdPais");

                    b.HasOne("Dominio.Model.TblCatPais", "IdPaisResNavigation")
                        .WithMany()
                        .HasForeignKey("IdPaisResNavigationIdPais");

                    b.HasOne("Dominio.Model.TblCatProfesiones", "IdProfesionesNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IdProfesionesNavigationIdProfesiones");

                    b.HasOne("Dominio.Model.TblCatSexo", "IdSexoNavigation")
                        .WithMany("TblPacientes")
                        .HasForeignKey("IdSexoNavigationIdSexo");

                    b.HasOne("Dominio.Model.TblCatTipoSangre", "IdTipoSangreNavigation")
                        .WithMany()
                        .HasForeignKey("IdTipoSangreNavigationIdTipoSangre");

                    b.HasOne("Dominio.TblCatReligion", "tblCatReligion")
                        .WithMany()
                        .HasForeignKey("tblCatReligionIdReigion");

                    b.Navigation("IdDepartamentoNacNavigation");

                    b.Navigation("IdDepartamentoResNavigation");

                    b.Navigation("IdEstadoCivilNavigation");

                    b.Navigation("IdIdentificacionNavigation");

                    b.Navigation("IdPaisNacNavigation");

                    b.Navigation("IdPaisResNavigation");

                    b.Navigation("IdProfesionesNavigation");

                    b.Navigation("IdSexoNavigation");

                    b.Navigation("IdTipoSangreNavigation");

                    b.Navigation("tblCatReligion");
                });

            modelBuilder.Entity("Dominio.Model.TblResultado", b =>
                {
                    b.HasOne("Dominio.Model.TblExamenes", "IdExamenNavigation")
                        .WithMany("TblResultados")
                        .HasForeignKey("IdExamenNavigationIdExamen");

                    b.HasOne("Dominio.Model.TblOrdenes", "IdOrdenNavigation")
                        .WithMany("TblResultados")
                        .HasForeignKey("IdOrdenNavigationIdOrden");

                    b.Navigation("IdExamenNavigation");

                    b.Navigation("IdOrdenNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Dominio.TblUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Dominio.TblUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.TblUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Dominio.TblUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Model.TblCatAreasLabServicio", b =>
                {
                    b.Navigation("TblAreaServLabEmpleados");

                    b.Navigation("TblExamenes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatCategoriaExamenes", b =>
                {
                    b.Navigation("TblExamenes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatDepartamento", b =>
                {
                    b.Navigation("TblCatSucursales");
                });

            modelBuilder.Entity("Dominio.Model.TblCatEstadoCivil", b =>
                {
                    b.Navigation("TblEmpleados");

                    b.Navigation("TblMedicos");

                    b.Navigation("TblPacientes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatHospital", b =>
                {
                    b.Navigation("TblCatSucursales");
                });

            modelBuilder.Entity("Dominio.Model.TblCatIdentificacion", b =>
                {
                    b.Navigation("TblEmpleados");

                    b.Navigation("TblMedicos");

                    b.Navigation("TblPacientes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatNacionalidad", b =>
                {
                    b.Navigation("TblCatIdentificacions");

                    b.Navigation("TblEmpleados");
                });

            modelBuilder.Entity("Dominio.Model.TblCatPais", b =>
                {
                    b.Navigation("TblCatSucursales");
                });

            modelBuilder.Entity("Dominio.Model.TblCatPerfiles", b =>
                {
                    b.Navigation("TblCatPerfilesExamenes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatProfesiones", b =>
                {
                    b.Navigation("TblCatOcupaciones");

                    b.Navigation("TblEmpleados");

                    b.Navigation("TblPacientes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatSexo", b =>
                {
                    b.Navigation("TblCatValoresNormales");

                    b.Navigation("TblEmpleados");

                    b.Navigation("TblMedicos");

                    b.Navigation("TblPacientes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatSucursales", b =>
                {
                    b.Navigation("TblAreaServLabEmpleados");

                    b.Navigation("TblMedicos");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoMuestra", b =>
                {
                    b.Navigation("TblExamenes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoOrden", b =>
                {
                    b.Navigation("TblOrdenes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoResultado", b =>
                {
                    b.Navigation("TblExamenes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatTipoServicio", b =>
                {
                    b.Navigation("TblOrdenes");
                });

            modelBuilder.Entity("Dominio.Model.TblCatUnidadMedida", b =>
                {
                    b.Navigation("TblExamenes");
                });

            modelBuilder.Entity("Dominio.Model.TblEmpleado", b =>
                {
                    b.Navigation("TblAreaServLabEmpleados");

                    b.Navigation("TblCatOcupaciones");
                });

            modelBuilder.Entity("Dominio.Model.TblExamenes", b =>
                {
                    b.Navigation("TblCatIndicacionExaPacientes");

                    b.Navigation("TblCatPerfilesExamenes");

                    b.Navigation("TblCatValoresNormales");

                    b.Navigation("TblOrdenesDetalles");

                    b.Navigation("TblResultados");
                });

            modelBuilder.Entity("Dominio.Model.TblMedico", b =>
                {
                    b.Navigation("TblOrdenes");
                });

            modelBuilder.Entity("Dominio.Model.TblOrdenes", b =>
                {
                    b.Navigation("TblOrdenesDetalles");

                    b.Navigation("TblResultados");
                });

            modelBuilder.Entity("Dominio.Model.TblPaciente", b =>
                {
                    b.Navigation("TblOrdenes");
                });
#pragma warning restore 612, 618
        }
    }
}
